{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anuj Pandit\\\\OneDrive\\\\Desktop\\\\Internship project\\\\Quiz app\\\\quiz-app\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport Score from './Score';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quizQuestions = {\n  general: [{\n    question: \"What is the capital of France?\",\n    answers: [\"Paris\", \"London\", \"Rome\", \"Berlin\"],\n    correct: \"Paris\"\n  }, {\n    question: \"What is 2 + 2?\",\n    answers: [\"3\", \"4\", \"5\", \"6\"],\n    correct: \"4\"\n  }, {\n    question: \"What is the largest planet in our solar system?\",\n    answers: [\"Earth\", \"Jupiter\", \"Mars\", \"Saturn\"],\n    correct: \"Jupiter\"\n  }],\n  science: [{\n    question: \"What is the chemical symbol for water?\",\n    answers: [\"O2\", \"H2O\", \"CO2\", \"NaCl\"],\n    correct: \"H2O\"\n  }, {\n    question: \"How many bones are in the human body?\",\n    answers: [\"206\", \"208\", \"210\", \"212\"],\n    correct: \"206\"\n  }, {\n    question: \"What planet is known as the Red Planet?\",\n    answers: [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"],\n    correct: \"Mars\"\n  }]\n};\nconst Quiz = () => {\n  _s();\n  const [category, setCategory] = useState('general');\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const handleAnswerOptionClick = (questionIndex, answer) => {\n    const updatedAnswers = [...userAnswers];\n    updatedAnswers[questionIndex] = answer;\n    setUserAnswers(updatedAnswers);\n    const isCorrect = answer === quizQuestions[category][questionIndex].correct;\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n  };\n  const handleCategoryChange = e => {\n    setCategory(e.target.value);\n    setScore(0);\n    setShowScore(false);\n    setUserAnswers([]);\n  };\n  const handleSubmit = () => {\n    setShowScore(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Category:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleCategoryChange,\n        value: category,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"general\",\n          children: \"General Knowledge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"science\",\n          children: \"Science\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), showScore ? /*#__PURE__*/_jsxDEV(Score, {\n      score: score,\n      totalQuestions: quizQuestions[category].length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-list\",\n      children: [quizQuestions[category].map((question, index) => /*#__PURE__*/_jsxDEV(Question, {\n        questionIndex: index,\n        question: question,\n        userAnswer: userAnswers[index],\n        handleAnswerOptionClick: handleAnswerOptionClick\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n};\n_s(Quiz, \"WenXCjpgnvNFK2Xyors9STxNja8=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","Question","Score","jsxDEV","_jsxDEV","quizQuestions","general","question","answers","correct","science","Quiz","_s","category","setCategory","score","setScore","showScore","setShowScore","userAnswers","setUserAnswers","handleAnswerOptionClick","questionIndex","answer","updatedAnswers","isCorrect","handleCategoryChange","e","target","value","handleSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","totalQuestions","length","map","index","userAnswer","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Anuj Pandit/OneDrive/Desktop/Internship project/Quiz app/quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Question from './Question';\r\nimport Score from './Score';\r\n\r\nconst quizQuestions = {\r\n    general: [\r\n      {\r\n        question: \"What is the capital of France?\",\r\n        answers: [\"Paris\", \"London\", \"Rome\", \"Berlin\"],\r\n        correct: \"Paris\"\r\n      },\r\n      {\r\n        question: \"What is 2 + 2?\",\r\n        answers: [\"3\", \"4\", \"5\", \"6\"],\r\n        correct: \"4\"\r\n      },\r\n      {\r\n        question: \"What is the largest planet in our solar system?\",\r\n        answers: [\"Earth\", \"Jupiter\", \"Mars\", \"Saturn\"],\r\n        correct: \"Jupiter\"\r\n      }\r\n    ],\r\n    science: [\r\n      {\r\n        question: \"What is the chemical symbol for water?\",\r\n        answers: [\"O2\", \"H2O\", \"CO2\", \"NaCl\"],\r\n        correct: \"H2O\"\r\n      },\r\n      {\r\n        question: \"How many bones are in the human body?\",\r\n        answers: [\"206\", \"208\", \"210\", \"212\"],\r\n        correct: \"206\"\r\n      },\r\n      {\r\n        question: \"What planet is known as the Red Planet?\",\r\n        answers: [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"],\r\n        correct: \"Mars\"\r\n      }\r\n    ]\r\n  };\r\n  \r\n\r\n  const Quiz = () => {\r\n    const [category, setCategory] = useState('general');\r\n    const [score, setScore] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [userAnswers, setUserAnswers] = useState([]);\r\n  \r\n    const handleAnswerOptionClick = (questionIndex, answer) => {\r\n      const updatedAnswers = [...userAnswers];\r\n      updatedAnswers[questionIndex] = answer;\r\n      setUserAnswers(updatedAnswers);\r\n  \r\n      const isCorrect = answer === quizQuestions[category][questionIndex].correct;\r\n      if (isCorrect) {\r\n        setScore(score + 1);\r\n      }\r\n    };\r\n  \r\n    const handleCategoryChange = (e) => {\r\n      setCategory(e.target.value);\r\n      setScore(0);\r\n      setShowScore(false);\r\n      setUserAnswers([]);\r\n    };\r\n  \r\n    const handleSubmit = () => {\r\n      setShowScore(true);\r\n    };\r\n  \r\n    return (\r\n      <div className='app'>\r\n        <h1>Quiz App</h1>\r\n        <label>\r\n          Select Category:\r\n          <select onChange={handleCategoryChange} value={category}>\r\n            <option value=\"general\">General Knowledge</option>\r\n            <option value=\"science\">Science</option>\r\n          </select>\r\n        </label>\r\n        {showScore ? (\r\n          <Score score={score} totalQuestions={quizQuestions[category].length} />\r\n        ) : (\r\n          <div className=\"question-list\">\r\n            {quizQuestions[category].map((question, index) => (\r\n              <Question\r\n                key={index}\r\n                questionIndex={index}\r\n                question={question}\r\n                userAnswer={userAnswers[index]}\r\n                handleAnswerOptionClick={handleAnswerOptionClick}\r\n              />\r\n            ))}\r\n            <button onClick={handleSubmit}>Submit</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Quiz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,aAAa,GAAG;EAClBC,OAAO,EAAE,CACP;IACEC,QAAQ,EAAE,gCAAgC;IAC1CC,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC;IAC9CC,OAAO,EAAE;EACX,CAAC,EACD;IACEF,QAAQ,EAAE,gBAAgB;IAC1BC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAC7BC,OAAO,EAAE;EACX,CAAC,EACD;IACEF,QAAQ,EAAE,iDAAiD;IAC3DC,OAAO,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,CAAC;IAC/CC,OAAO,EAAE;EACX,CAAC,CACF;EACDC,OAAO,EAAE,CACP;IACEH,QAAQ,EAAE,wCAAwC;IAClDC,OAAO,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC;IACrCC,OAAO,EAAE;EACX,CAAC,EACD;IACEF,QAAQ,EAAE,uCAAuC;IACjDC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACrCC,OAAO,EAAE;EACX,CAAC,EACD;IACEF,QAAQ,EAAE,yCAAyC;IACnDC,OAAO,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC;IAC/CC,OAAO,EAAE;EACX,CAAC;AAEL,CAAC;AAGD,MAAME,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,SAAS,CAAC;EACnD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMqB,uBAAuB,GAAGA,CAACC,aAAa,EAAEC,MAAM,KAAK;IACzD,MAAMC,cAAc,GAAG,CAAC,GAAGL,WAAW,CAAC;IACvCK,cAAc,CAACF,aAAa,CAAC,GAAGC,MAAM;IACtCH,cAAc,CAACI,cAAc,CAAC;IAE9B,MAAMC,SAAS,GAAGF,MAAM,KAAKlB,aAAa,CAACQ,QAAQ,CAAC,CAACS,aAAa,CAAC,CAACb,OAAO;IAC3E,IAAIgB,SAAS,EAAE;MACbT,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;EACF,CAAC;EAED,MAAMW,oBAAoB,GAAIC,CAAC,IAAK;IAClCb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3Bb,QAAQ,CAAC,CAAC,CAAC;IACXE,YAAY,CAAC,KAAK,CAAC;IACnBE,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzBZ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACEd,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5B,OAAA;MAAA4B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBhC,OAAA;MAAA4B,QAAA,GAAO,kBAEL,eAAA5B,OAAA;QAAQiC,QAAQ,EAAEX,oBAAqB;QAACG,KAAK,EAAEhB,QAAS;QAAAmB,QAAA,gBACtD5B,OAAA;UAAQyB,KAAK,EAAC,SAAS;UAAAG,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClDhC,OAAA;UAAQyB,KAAK,EAAC,SAAS;UAAAG,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACPnB,SAAS,gBACRb,OAAA,CAACF,KAAK;MAACa,KAAK,EAAEA,KAAM;MAACuB,cAAc,EAAEjC,aAAa,CAACQ,QAAQ,CAAC,CAAC0B;IAAO;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEvEhC,OAAA;MAAK2B,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC3B3B,aAAa,CAACQ,QAAQ,CAAC,CAAC2B,GAAG,CAAC,CAACjC,QAAQ,EAAEkC,KAAK,kBAC3CrC,OAAA,CAACH,QAAQ;QAEPqB,aAAa,EAAEmB,KAAM;QACrBlC,QAAQ,EAAEA,QAAS;QACnBmC,UAAU,EAAEvB,WAAW,CAACsB,KAAK,CAAE;QAC/BpB,uBAAuB,EAAEA;MAAwB,GAJ5CoB,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF,CAAC,eACFhC,OAAA;QAAQuC,OAAO,EAAEb,YAAa;QAAAE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CAxDID,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AA0DV,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}