{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anuj Pandit\\\\OneDrive\\\\Desktop\\\\Internship project\\\\Quiz app\\\\quiz-app\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport Score from './Score';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst quizQuestions = {\n  general: [{\n    question: \"What is the capital of France?\",\n    answers: [\"Paris\", \"London\", \"Rome\", \"Berlin\"],\n    correct: \"Paris\"\n  }, {\n    question: \"What is 2 + 2?\",\n    answers: [\"3\", \"4\", \"5\", \"6\"],\n    correct: \"4\"\n  }, {\n    question: \"What is the largest planet in our solar system?\",\n    answers: [\"Earth\", \"Jupiter\", \"Mars\", \"Saturn\"],\n    correct: \"Jupiter\"\n  }],\n  science: [{\n    question: \"What is the chemical symbol for water?\",\n    answers: [\"O2\", \"H2O\", \"CO2\", \"NaCl\"],\n    correct: \"H2O\"\n  }, {\n    question: \"How many bones are in the human body?\",\n    answers: [\"206\", \"208\", \"210\", \"212\"],\n    correct: \"206\"\n  }, {\n    question: \"What planet is known as the Red Planet?\",\n    answers: [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"],\n    correct: \"Mars\"\n  }]\n};\nconst Quiz = () => {\n  _s();\n  const [category, setCategory] = useState('general');\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [time, setTime] = useState(15); // 15 seconds per question\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTime(prevTime => prevTime - 1);\n    }, 1000);\n    if (time === 0) {\n      handleAnswerOptionClick(false);\n    }\n    return () => clearInterval(timer);\n  }, [time]);\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < quizQuestions[category].length) {\n      setCurrentQuestion(nextQuestion);\n      setTime(15);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const handleCategoryChange = e => {\n    setCategory(e.target.value);\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n    setTime(15);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Category:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleCategoryChange,\n        value: category,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"general\",\n          children: \"General Knowledge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"science\",\n          children: \"Science\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), showScore ? /*#__PURE__*/_jsxDEV(Score, {\n      score: score,\n      totalQuestions: quizQuestions[category].length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Time remaining: \", time, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Question, {\n        question: quizQuestions[category][currentQuestion],\n        handleAnswerOptionClick: handleAnswerOptionClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, this);\n};\n_s(Quiz, \"AsjRz/QMXnUskI6diOPnYH6Y5D4=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","Question","Score","jsxDEV","_jsxDEV","Fragment","_Fragment","quizQuestions","general","question","answers","correct","science","Quiz","_s","category","setCategory","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","time","setTime","useEffect","timer","setInterval","prevTime","handleAnswerOptionClick","clearInterval","isCorrect","nextQuestion","length","handleCategoryChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","totalQuestions","_c","$RefreshReg$"],"sources":["C:/Users/Anuj Pandit/OneDrive/Desktop/Internship project/Quiz app/quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Question from './Question';\r\nimport Score from './Score';\r\n\r\nconst quizQuestions = {\r\n    general: [\r\n      {\r\n        question: \"What is the capital of France?\",\r\n        answers: [\"Paris\", \"London\", \"Rome\", \"Berlin\"],\r\n        correct: \"Paris\"\r\n      },\r\n      {\r\n        question: \"What is 2 + 2?\",\r\n        answers: [\"3\", \"4\", \"5\", \"6\"],\r\n        correct: \"4\"\r\n      },\r\n      {\r\n        question: \"What is the largest planet in our solar system?\",\r\n        answers: [\"Earth\", \"Jupiter\", \"Mars\", \"Saturn\"],\r\n        correct: \"Jupiter\"\r\n      }\r\n    ],\r\n    science: [\r\n      {\r\n        question: \"What is the chemical symbol for water?\",\r\n        answers: [\"O2\", \"H2O\", \"CO2\", \"NaCl\"],\r\n        correct: \"H2O\"\r\n      },\r\n      {\r\n        question: \"How many bones are in the human body?\",\r\n        answers: [\"206\", \"208\", \"210\", \"212\"],\r\n        correct: \"206\"\r\n      },\r\n      {\r\n        question: \"What planet is known as the Red Planet?\",\r\n        answers: [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"],\r\n        correct: \"Mars\"\r\n      }\r\n    ]\r\n  };\r\n  \r\n\r\n  const Quiz = () => {\r\n    const [category, setCategory] = useState('general');\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [time, setTime] = useState(15); // 15 seconds per question\r\n  \r\n    useEffect(() => {\r\n      const timer = setInterval(() => {\r\n        setTime((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n  \r\n      if (time === 0) {\r\n        handleAnswerOptionClick(false);\r\n      }\r\n  \r\n      return () => clearInterval(timer);\r\n    }, [time]);\r\n  \r\n    const handleAnswerOptionClick = (isCorrect) => {\r\n      if (isCorrect) {\r\n        setScore(score + 1);\r\n      }\r\n  \r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < quizQuestions[category].length) {\r\n        setCurrentQuestion(nextQuestion);\r\n        setTime(15);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n    };\r\n  \r\n    const handleCategoryChange = (e) => {\r\n      setCategory(e.target.value);\r\n      setCurrentQuestion(0);\r\n      setScore(0);\r\n      setShowScore(false);\r\n      setTime(15);\r\n    };\r\n  \r\n    return (\r\n      <div className='app'>\r\n        <h1>Quiz App</h1>\r\n        <label>\r\n          Select Category:\r\n          <select onChange={handleCategoryChange} value={category}>\r\n            <option value=\"general\">General Knowledge</option>\r\n            <option value=\"science\">Science</option>\r\n          </select>\r\n        </label>\r\n        {showScore ? (\r\n          <Score score={score} totalQuestions={quizQuestions[category].length} />\r\n        ) : (\r\n          <>\r\n            <div>Time remaining: {time} seconds</div>\r\n            <Question\r\n              question={quizQuestions[category][currentQuestion]}\r\n              handleAnswerOptionClick={handleAnswerOptionClick}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}